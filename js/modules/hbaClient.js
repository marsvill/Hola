const PreventDuplicateScript_86=0;const TOKEN_HEADER_NAME="x-bound-auth-token",FETCH_TOKEN_METADATA_SELECTOR='meta[name="hardware-backed-authentication-data"]',FETCH_USER_DATA_SELECTOR='meta[name="user-data"]',FETCH_TOKEN_METADATA_REGEX=/name="hardware-backed-authentication-data"(\s|.)+?data-is-secure-authentication-intent-enabled="(.+?)"(\s|.)+?data-is-bound-auth-token-enabled="(.+?)"(\s|.)+?data-bound-auth-token-whitelist="(.+?)"(\s|.)+?data-bound-auth-token-exemptlist="(.+?)"(\s|.)+?data-hba-indexed-db-name="(.+?)"(\s|.)+?data-hba-indexed-db-obj-store-name="(.+?)"(\s|.)+?data-hba-indexed-db-key-name="(.+?)"(\s|.)+?data-hba-indexed-db-version="(.+?)"/,FETCH_USER_DATA_REGEX=/<meta[^name=]name="user-data"/,AUTH_TOKEN_SEPARATOR="|",DEFAULT_FETCH_TOKEN_METADATA_URL="https://www.roblox.com/reference/blank",DEFAULT_MATCH_ROBLOX_URL_BASE=".roblox.com",DEFAULT_INDEXED_DB_VERSION=1,DEFAULT_FORCE_BAT_URLS=["/account-switcher/v1/switch"],BAT_SIGNATURE_VERSION="v1",TOKEN_SIGNATURE_ALGORITHM={name:"ECDSA",hash:{name:"SHA-256"}};function decodeEntities(s){const a=/&(nbsp|amp|quot|lt|gt);/g,e={nbsp:" ",amp:"&",quot:'"',lt:"<",gt:">"};return s.replace(a,function(t,r){return e[r]}).replace(/&#(\d+);/gi,function(t,r){const n=parseInt(r,10);return String.fromCharCode(n)})}async function hashStringSha256(s){const a=new TextEncoder().encode(s),e=await crypto.subtle.digest(TOKEN_SIGNATURE_ALGORITHM.hash.name,a);return arrayBufferToBase64String(e)}function arrayBufferToBase64String(s){let a="";const e=new Uint8Array(s);for(let t=0;t<e.byteLength;t++)a+=String.fromCharCode(e[t]);return btoa(a)}async function signWithKey(s,a){const e=await crypto.subtle.sign(TOKEN_SIGNATURE_ALGORITHM,s,new TextEncoder().encode(a).buffer);return arrayBufferToBase64String(e)}function doesDatabaseExist(s){return new Promise(a=>{const e=indexedDB.open(s);e.onsuccess=()=>{e.result.close(),a(!0)},e.onupgradeneeded=t=>{t.target?.transaction?.abort(),a(!1)}})}async function getCryptoKeyPairFromDB(s,a,e){let t=1;if("databases"in indexedDB){const n=(await indexedDB.databases()).find(i=>i.name===s);if(!n)return null;n?.version&&(t=n.version)}else if(!await doesDatabaseExist(s))return null;return new Promise((r,n)=>{const i=indexedDB.open(s,t);i.onsuccess=()=>{try{const o=i.result,u=o.transaction(a,"readonly"),l=u.objectStore(a).get(e);l.onsuccess=()=>{r(l.result)},l.onerror=()=>{n(i.error)},u.oncomplete=()=>{o.close()}}catch(o){n(o)}},i.onerror=()=>{n(i.error)}})}function filterObject(s){return Object.fromEntries(Object.entries(s).filter(([a,e])=>e!=null))}class HBAClient{_fetchFn;cachedTokenMetadata;headers={};cryptoKeyPair;onSite=!1;suppliedCryptoKeyPair;cookie;isAuthenticated;urls={fetchTokenMetadataUrl:DEFAULT_FETCH_TOKEN_METADATA_URL,matchRobloxBaseUrl:DEFAULT_MATCH_ROBLOX_URL_BASE,forceBATUrls:DEFAULT_FORCE_BAT_URLS};fetch(a,e){const t=new Headers(filterObject(this.headers));if(e?.headers){const n=new Headers(e.headers);for(const[i,o]of n)t.set(i,o)}this.cookie&&t.set("cookie",this.cookie);const r={...e,headers:t};return this.onSite&&(r.credentials="include"),(this._fetchFn??fetch)(a,r)}async generateBaseHeaders(a,e,t,r){if(!await this.isUrlIncludedInWhitelist(a,t))return{};const n=await this.generateBAT(a.toString(),e,r);return n?{[TOKEN_HEADER_NAME]:n}:{}}async getTokenMetadata(a){if(!a&&await this.cachedTokenMetadata)return this.cachedTokenMetadata;const e=(async()=>{let t,r,n,i,o,u,h,l,f,b;const m="DOMParser"in globalThis&&"document"in globalThis;if(a||!m||!document.querySelector?.(FETCH_TOKEN_METADATA_SELECTOR)||!document.querySelector?.(FETCH_USER_DATA_SELECTOR)&&document?.readyState==="loading"){const d=await this.fetch(this.urls.fetchTokenMetadataUrl).then(c=>c.text());if(m)b=new DOMParser().parseFromString(d,"text/html");else{const c=d.match(FETCH_TOKEN_METADATA_REGEX);if(!c)return null;try{f=FETCH_USER_DATA_REGEX.test(d),t=c[2]==="true",r=c[4]==="true";try{n=JSON.parse(decodeEntities(c[6]))?.Whitelist?.map(T=>({...T,sampleRate:Number(T.sampleRate)}))}catch{n=[]}try{i=JSON.parse(decodeEntities(c[8]))?.Exemptlist}catch{i=[]}o=c[10],u=c[12],h=c[14],l=parseInt(c[16],10)||1}catch{return this.cachedTokenMetadata=void 0,null}}}else b=document;if(b){const d=b.querySelector?.(FETCH_TOKEN_METADATA_SELECTOR);if(!d)return null;try{f=!!b.querySelector?.(FETCH_USER_DATA_SELECTOR),t=d.getAttribute("data-is-secure-authentication-intent-enabled")==="true",r=d.getAttribute("data-is-bound-auth-token-enabled")==="true";try{n=JSON.parse(d.getAttribute("data-bound-auth-token-whitelist"))?.Whitelist?.map(c=>({...c,sampleRate:Number(c.sampleRate)}))}catch{n=[]}try{i=JSON.parse(d.getAttribute("data-bound-auth-token-exemptlist"))?.Exemptlist}catch{i=[]}o=d.getAttribute("data-hba-indexed-db-name"),u=d.getAttribute("data-hba-indexed-db-obj-store-name"),h=d.getAttribute("data-hba-indexed-db-key-name"),l=parseInt(d.getAttribute("data-hba-indexed-db-version"),10)||1}catch{return this.cachedTokenMetadata=void 0,null}}const y={isSecureAuthenticationIntentEnabled:t,isBoundAuthTokenEnabledForAllUrls:r,boundAuthTokenWhitelist:n,boundAuthTokenExemptlist:i,hbaIndexedDbName:o,hbaIndexedDbObjStoreName:u,hbaIndexedDbKeyName:h,hbaIndexedDbVersion:l,isAuthenticated:f};return this.cachedTokenMetadata=y,y})();return this.cachedTokenMetadata=e,e}async getCryptoKeyPair(a){if(this.suppliedCryptoKeyPair)return this.suppliedCryptoKeyPair;if(!a&&await this.cryptoKeyPair)return this.cryptoKeyPair;if(!("indexedDB"in globalThis))return null;const e=(async()=>{const t=await this.getTokenMetadata(a);if(!t)return null;try{const r=await getCryptoKeyPairFromDB(t.hbaIndexedDbName,t.hbaIndexedDbObjStoreName,t.hbaIndexedDbKeyName);return this.cryptoKeyPair=r??void 0,r}catch{return this.cryptoKeyPair=void 0,null}})();return this.cryptoKeyPair=e,e}async generateBAT(a,e,t){const r=await this.getCryptoKeyPair();if(!r?.privateKey)return null;const n=Math.floor(Date.now()/1e3).toString();let i;typeof t=="object"?i=JSON.stringify(t):typeof t=="string"&&(i=t);const o=await hashStringSha256(i),u=[o,n,a.toString(),e.toUpperCase()].join(AUTH_TOKEN_SEPARATOR),h=await signWithKey(r.privateKey,u);return[BAT_SIGNATURE_VERSION,o,n,h].join(AUTH_TOKEN_SEPARATOR)}async isUrlIncludedInWhitelist(a,e){const t=a.toString();if(!t.toString().includes(this.urls.matchRobloxBaseUrl))return!1;if(this.onSite&&this.urls.currentUrl)try{if(!new URL(t,this.urls.currentUrl).href.includes(this.urls.matchRobloxBaseUrl))return!1}catch{}if(this.urls.forceBATUrls.some(n=>t.includes(n)))return!0;const r=await this.getTokenMetadata();return!e||!(r?.isAuthenticated||this.isAuthenticated)?!1:!!r&&(r.isBoundAuthTokenEnabledForAllUrls||!!r.boundAuthTokenWhitelist?.some(n=>t.includes(n.apiSite)&&Math.floor(Math.random()*100)<n.sampleRate))&&!r.boundAuthTokenExemptlist?.some(n=>t.includes(n.apiSite))}constructor({fetch:a,headers:e,onSite:t,keys:r,urls:n,cookie:i}={}){if(a&&(this._fetchFn=a),e&&(this.headers=e instanceof Headers?Object.fromEntries(e.entries()):e),n)for(const o in n)this.urls[o]=n[o];t&&(this.onSite=t,globalThis?.location?.href&&!n?.currentUrl&&(this.urls.currentUrl=globalThis.location.href)),r&&(this.suppliedCryptoKeyPair=r),i&&(this.cookie=i)}}

//# sourceMappingURL=https://roqol.io/assets/sourcemap/chrome/2.33.1/js/modules/hbaClient.js