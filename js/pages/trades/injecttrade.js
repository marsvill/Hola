const PreventDuplicateScript_259=0;const sleep=e=>new Promise(t=>setTimeout(t,e));function FindFirstId(e){return document.getElementById(e)}async function WaitForId(e){let t=null;for(;t=FindFirstId(e),t==null;)await sleep(50);return t}function FindFirstClass(e){return document.getElementsByClassName(e)[0]}async function WaitForClass(e){let t=null;for(;t=FindFirstClass(e),t==null;)await sleep(50);return t}async function WaitForClassPath(e,...t){let r=e;for(let n=0;n<t.length;n++)for(;;){const a=r.getElementsByClassName(t[n])[0];if(a){r=a;break}await sleep(50)}return r}async function TradeRowAdded(e){!e.className||e.className.search("trade-row")===-1||(Trade=angular.element(e).scope().trade,e.setAttribute("userid",Trade.user.id),e.setAttribute("tradeid",Trade.id),e.className+=" loaded")}async function ListenToNewName(e,t){let r=await WaitForClass("trades-header-nowrap font-title");r=r.getElementsByTagName("span")[1];function n(s){if(s.parentElement.children.length<3)return;const i=angular.element(e).scope();t.setAttribute("userid",i.data.trade.user.id),t.setAttribute("tradeid",i.data.trade.id)}new MutationObserver(function(s){s.forEach(function(i){if(i.type!=="childList")return;const d=i.addedNodes;for(let l=0;l<d.length;l++)n(d[l]);i.removedNodes.length>0&&r.children.length<3&&(t.removeAttribute("userid"),t.removeAttribute("tradeid"))})}).observe(r,{childList:!0});const a=r.children;for(let s=0;s<a.length;s++)n(a[s])}async function ListenToNewTradeData(){const e=await WaitForClass("col-xs-12 col-sm-8 trades-list-detail");function t(n){n.nodeType===Node.ELEMENT_NODE&&n.tagName.toLowerCase()==="div"&&ListenToNewName(e,n)}new MutationObserver(function(n){n.forEach(function(a){if(a.type!=="childList")return;const s=a.addedNodes;for(let i=0;i<s.length;i++)t(s[i])})}).observe(e,{childList:!0});const r=e.children;for(let n=0;n<r.length;n++)t(r[n])}async function InjectTrade(){const e=await WaitForId("trade-row-scroll-container"),t=await WaitForClassPath(e,"simplebar-wrapper","simplebar-mask","simplebar-offset","simplebar-content-wrapper","simplebar-content");new MutationObserver(function(n){n.forEach(function(a){if(a.type!=="childList")return;const s=a.addedNodes;for(let i=0;i<s.length;i++)TradeRowAdded(s[i])})}).observe(t,{childList:!0});const r=t.children;for(let n=0;n<r.length;n++)TradeRowAdded(r[n]);ListenToNewTradeData()}InjectTrade();

//# sourceMappingURL=https://roqol.io/assets/sourcemap/chrome/2.33.1/js/pages/trades/injecttrade.js